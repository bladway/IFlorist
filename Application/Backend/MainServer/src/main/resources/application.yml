management:
  endpoints:
    web:
      exposure:
        include: info,health,metrics
server:
  tomcat:
    threads:
      max: 80
    mbeanregistry:
      enabled: true
    max-swallow-size: -1
  ssl:
    key-store: ${MAINSERVER_SSL_PATH}
    key-store-type: PKCS12
    key-store-password: ${MAINSERVER_SSL_PASSWORD}
  port: ${MAINSERVER_PORT}
logging:
  file:
    name: MainServer.log


spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      connection-timeout: 60000
      maximum-pool-size: 80
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    database: postgresql
    properties:
      hibernate:
        format_sql: true
  kafka:
    bootstrap-servers: ${KAFKA_HOST}:${KAFKA_PORT}
    jaas:
      enabled: true
    properties:
      security:
        protocol: SASL_PLAINTEXT
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_USER}" password="${KAFKA_PASSWORD}";
    producer:
      topic: ProcRequestTopic
      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
      properties:
        max:
          request:
            size: 41943040
    consumer:
      topic: ProcReturnTopic
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
      group-id: ${MAINSERVER_KAFKA_LISTENER_GROUP_ID}
  servlet:
    multipart:
      max-file-size: 40MB
      max-request-size: 50MB
application:
  limits:
    anonymous: 5
    user: 10
  images:
    path: ${MAINSERVER_IMAGES_PATH}
    procpath: ${MAINSERVER_IMAGES_PROC_PATH}
    getpath: ${MAINSERVER_IMAGES_GET_PATH}
  jwt:
    password: ${MAINSERVER_JWT_PASSWORD}
    passwordr: ${MAINSERVER_JWT_R_PASSWORD}
    lifetime: ${MAINSERVER_JWT_LIFETIME}
    lifetimer: ${MAINSERVER_JWT_R_LIFETIME}
  error:
    expired: expired
    expiredr: expiredr
    badjwt: badjwt
    badjwtr: badjwtr
    badlogin: badlogin
    badpassword: badpassword
    badip: badip
    usrnotfound: usrnotfound
    sessionidproblem: sessionidproblem
    doublelogin: doublelogin
    norights: norights
    floranotfound: floranotfound
    requestnotfound: requestnotfound
    imagenotfound: imagenotfound
    imagenotuploaded: imagenotuploaded
    invalidinput: invalidinput
    neuraltimeout: neuraltimeout
    changeisnull: changeisnull
    doubleflora: doubleflora
    neuraltouserbad: neuraltouserbad
    usertoanotherbad: usertoanotherbad
    botanisttoanotherbad: botanisttoanotherbad
    limitsexceeded: limitsexceeded
    badrequeststate: badrequeststate
    overloaded: overloaded
    timeout: timeout
